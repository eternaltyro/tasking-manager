/* range functions */
@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

/* Media queries */
$xsmall-range: (0, 543px);
$small-range: (544px, 767px);
$medium-range: (768px, 1050px);
$large-range: (1050px, 1199px);
$xlarge-range: (1200px);
$xxlarge-range: (1600px);

/* Media queries */
@mixin media($arg) {
  @if $arg == screen {
    @media #{$screen} { @content; }
  }
  @if $arg == landscape {
    @media #{$screen} and (orientation: landscape) { @content; }
  }
  @if $arg == portrait {
    @media #{$screen} and (orientation: portrait) { @content; }
  }
  @if $arg == xsmall-up {
    @media #{$screen} and (min-width: lower-bound($xsmall-range)) { @content; }
  }
  @if $arg == xsmall-only {
    @media #{$screen} and (max-width: upper-bound($xsmall-range)) { @content; }
  }
  @if $arg == small-up {
    @media #{$screen} and (min-width: lower-bound($small-range)) { @content; }
  }
  @if $arg == small-only {
    @media #{$screen} and (min-width: lower-bound($small-range)) and (max-width: upper-bound($small-range)) { @content; }
  }
  @if $arg == medium-up {
    @media #{$screen} and (min-width: lower-bound($medium-range)) { @content; }
  }
  @if $arg == medium-down {
    @media #{$screen} and (max-width: lower-bound($medium-range)) { @content; }
  }
  @if $arg == medium-only {
    @media #{$screen} and (min-width: lower-bound($medium-range)) and (max-width: upper-bound($medium-range)) { @content; }
  }
  @if $arg == medium-large {
    @media #{$screen} and (min-width: lower-bound($medium-range)) and (max-width: upper-bound($large-range)) { @content; }
  }
  @if $arg == large-down {
    @media #{$screen} and (max-width: lower-bound($large-range)) { @content; }
  }
  @if $arg == large-up {
    @media #{$screen} and (min-width: lower-bound($large-range)) { @content; }
  }
  @if $arg == large-only {
    @media #{$screen} and (min-width: lower-bound($large-range)) and (max-width: upper-bound($large-range)) { @content; }
  }
  @if $arg == xlarge-down {
    @media #{$screen} and (max-width: $xlarge-range) { @content; }
  }
  @if $arg == xlarge-up {
    @media #{$screen} and (min-width: lower-bound($xlarge-range)) { @content; }
  }
  @if $arg == xlarge-only {
    @media #{$screen} and (min-width: lower-bound($xlarge-range)) and (max-width: upper-bound($xlarge-range)) { @content; }
  }
  @if $arg == xxlarge-up {
    @media #{$screen} and (min-width: lower-bound($xxlarge-range)) { @content; }
  }
}

/* Header grid */
.header-grid {
  grid-template-areas: "a a c c";
  display: grid;
  grid-template-columns: repeat(4, 1fr);
}
@media (min-width: lower-bound($medium-range)) and (max-width: lower-bound($large-range)) {
  .header-grid {
    grid-template-columns: repeat(5, 1fr) !important;
    grid-template-areas: "a a c c c" !important;
  }
}
@media (min-width: lower-bound($large-range)) and (max-width: upper-bound($large-range)) {
  .header-grid {
    grid-template-columns: repeat(12, 1fr) !important;
    grid-template-areas: "a a a b b b b b b c c c" !important;
  }
}
@media (min-width: $xlarge-range) {
  .header-grid {
    grid-template-columns: repeat(12, 1fr) !important;
    grid-template-areas: "a a a b b b b b c c c c" !important;
  }
}

.grid-area-a {
  grid-area: a;
}
.grid-area-b {
  grid-area: b;
}
.grid-area-c {
  grid-area: c;
}
@media (max-width: lower-bound($large-range)) {
  .grid-area-b, .hide-large-down {
    display: none;
    visibility: hidden;
  }
}
